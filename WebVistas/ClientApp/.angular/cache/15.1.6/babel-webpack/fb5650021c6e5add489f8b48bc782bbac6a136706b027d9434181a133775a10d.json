{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nfunction FetchDataComponent_tr_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const venta_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(venta_r1.cedula);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(venta_r1.idSupermercado);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(venta_r1.metodoPago);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(venta_r1.tipoCambio);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(venta_r1.fechaOrden);\n  }\n}\nexport class FetchDataComponent {\n  constructor(http) {\n    this.http = http;\n    this.selectedPerson = 0;\n    this.persons = [];\n    this.ventas = [];\n    this.totalVentas = 0;\n  }\n  ngOnInit() {\n    // Obtener los datos de las personas desde una URL\n    this.http.get('URL_PERSONAS').subscribe(data => {\n      this.persons = data;\n    });\n  }\n  // Método para cargar las ventas al seleccionar una persona\n  loadVentas() {\n    // Obtener los datos de las ventas desde una URL utilizando this.selectedPerson como parámetro\n    this.http.get('URL_VENTAS?cedula=' + this.selectedPerson).subscribe(data => {\n      this.ventas = data;\n      // Calcular el total de ventas\n      this.totalVentas = this.ventas.reduce((total, venta) => total + venta.total, 0);\n    });\n  }\n}\nFetchDataComponent.ɵfac = function FetchDataComponent_Factory(t) {\n  return new (t || FetchDataComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\nFetchDataComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FetchDataComponent,\n  selectors: [[\"app-fetch-data\"]],\n  decls: 21,\n  vars: 2,\n  consts: [[2, \"text-align\", \"center\"], [4, \"ngFor\", \"ngForOf\"], [2, \"text-align\", \"left\"]],\n  template: function FetchDataComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵtext(1, \"TOTAL DE VENTAS POR CLIENTE\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"h2\", 0);\n      i0.ɵɵtext(3, \"Ventas por persona\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"table\")(5, \"thead\")(6, \"tr\")(7, \"th\");\n      i0.ɵɵtext(8, \"Cedula\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"th\");\n      i0.ɵɵtext(10, \"IdSupermercado\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"th\");\n      i0.ɵɵtext(12, \"MetodoPago\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"th\");\n      i0.ɵɵtext(14, \"TipoCambio\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"th\");\n      i0.ɵɵtext(16, \"FechaOrden\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(17, \"tbody\");\n      i0.ɵɵtemplate(18, FetchDataComponent_tr_18_Template, 11, 5, \"tr\", 1);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(19, \"label\", 2);\n      i0.ɵɵtext(20);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(18);\n      i0.ɵɵproperty(\"ngForOf\", ctx.ventas);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\"TOTAL DE VENTAS(COLONES): \", ctx.totalVentas, \"\");\n    }\n  },\n  dependencies: [i2.NgForOf],\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;;;;IAiBIA,0BAAiC;IAC3BA,YAAkB;IAAAA,iBAAK;IAC3BA,0BAAI;IAAAA,YAA0B;IAAAA,iBAAK;IACnCA,0BAAI;IAAAA,YAAsB;IAAAA,iBAAK;IAC/BA,0BAAI;IAAAA,YAAsB;IAAAA,iBAAK;IAC/BA,0BAAI;IAAAA,aAAsB;IAAAA,iBAAK;;;;IAJ3BA,eAAkB;IAAlBA,qCAAkB;IAClBA,eAA0B;IAA1BA,6CAA0B;IAC1BA,eAAsB;IAAtBA,yCAAsB;IACtBA,eAAsB;IAAtBA,yCAAsB;IACtBA,eAAsB;IAAtBA,yCAAsB;;;ACfhC,OAAM,MAAOC,kBAAkB;EAO7BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IALxB,mBAAc,GAAW,CAAC;IAC1B,YAAO,GAAU,EAAE;IACnB,WAAM,GAAU,EAAE;IAClB,gBAAW,GAAW,CAAC;EAEiB;EAExCC,QAAQ;IACN;IACA,IAAI,CAACD,IAAI,CAACE,GAAG,CAAQ,cAAc,CAAC,CAACC,SAAS,CAACC,IAAI,IAAG;MACpD,IAAI,CAACC,OAAO,GAAGD,IAAI;IACrB,CAAC,CAAC;EACJ;EAEA;EACAE,UAAU;IACR;IACA,IAAI,CAACN,IAAI,CAACE,GAAG,CAAQ,oBAAoB,GAAG,IAAI,CAACK,cAAc,CAAC,CAACJ,SAAS,CAACC,IAAI,IAAG;MAChF,IAAI,CAACI,MAAM,GAAGJ,IAAI;MAElB;MACA,IAAI,CAACK,WAAW,GAAG,IAAI,CAACD,MAAM,CAACE,MAAM,CAAC,CAACC,KAAK,EAAEC,KAAK,KAAKD,KAAK,GAAGC,KAAK,CAACD,KAAK,EAAE,CAAC,CAAC;IACjF,CAAC,CAAC;EACJ;;AAzBWb,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;QAAlBA,kBAAkB;EAAAe;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDP/BpB,6BAAgC;MAAAA,2CAA2B;MAAAA,iBAAK;MAIhEA,6BAAgC;MAAAA,kCAAkB;MAAAA,iBAAK;MAEvDA,6BAAO;MAGGA,sBAAM;MAAAA,iBAAK;MACfA,0BAAI;MAAAA,+BAAc;MAAAA,iBAAK;MACvBA,2BAAI;MAAAA,2BAAU;MAAAA,iBAAK;MACnBA,2BAAI;MAAAA,2BAAU;MAAAA,iBAAK;MACnBA,2BAAI;MAAAA,2BAAU;MAAAA,iBAAK;MAGvBA,8BAAO;MACLA,oEAMK;MACPA,iBAAQ;MAGVA,iCAAiC;MAAAA,aAA2C;MAAAA,iBAAQ;;;MAV1DA,gBAAS;MAATA,oCAAS;MAUFA,eAA2C;MAA3CA,wEAA2C","names":["i0","FetchDataComponent","constructor","http","ngOnInit","get","subscribe","data","persons","loadVentas","selectedPerson","ventas","totalVentas","reduce","total","venta","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\heine\\OneDrive\\Escritorio\\Web_Ventas\\Web_Ventas\\WebVistas\\ClientApp\\src\\app\\fetch-data\\fetch-data.component.html","C:\\Users\\heine\\OneDrive\\Escritorio\\Web_Ventas\\Web_Ventas\\WebVistas\\ClientApp\\src\\app\\fetch-data\\fetch-data.component.ts"],"sourcesContent":["<h1 style=\"text-align: center;\">TOTAL DE VENTAS POR CLIENTE</h1>\r\n\r\n\r\n\r\n<h2 style=\"text-align: center;\">Ventas por persona</h2>\r\n\r\n<table>\r\n  <thead>\r\n    <tr>\r\n      <th>Cedula</th>\r\n      <th>IdSupermercado</th>\r\n      <th>MetodoPago</th>\r\n      <th>TipoCambio</th>\r\n      <th>FechaOrden</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let venta of ventas\">\r\n      <td>{{ venta.cedula }}</td>\r\n      <td>{{ venta.idSupermercado }}</td>\r\n      <td>{{ venta.metodoPago }}</td>\r\n      <td>{{ venta.tipoCambio }}</td>\r\n      <td>{{ venta.fechaOrden }}</td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n\r\n<label style=\"text-align: left;\">TOTAL DE VENTAS(COLONES): {{ totalVentas }}</label>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-fetch-data',\r\n  templateUrl: './fetch-data.component.html'\r\n})\r\nexport class FetchDataComponent implements OnInit {\r\n\r\n  selectedPerson: number = 0;\r\n  persons: any[] = [];\r\n  ventas: any[] = [];\r\n  totalVentas: number = 0;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  ngOnInit() {\r\n    // Obtener los datos de las personas desde una URL\r\n    this.http.get<any[]>('URL_PERSONAS').subscribe(data => {\r\n      this.persons = data;\r\n    });\r\n  }\r\n\r\n  // Método para cargar las ventas al seleccionar una persona\r\n  loadVentas() {\r\n    // Obtener los datos de las ventas desde una URL utilizando this.selectedPerson como parámetro\r\n    this.http.get<any[]>('URL_VENTAS?cedula=' + this.selectedPerson).subscribe(data => {\r\n      this.ventas = data;\r\n\r\n      // Calcular el total de ventas\r\n      this.totalVentas = this.ventas.reduce((total, venta) => total + venta.total, 0);\r\n    });\r\n  }\r\n\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}